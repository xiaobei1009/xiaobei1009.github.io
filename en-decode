encode
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.OutputStream;

import org.apache.commons.codec.binary.Base64;

public class Base64ToFile {
	public static void main(String[] args) throws Exception {
		File file = new File("D:/out.txt");
		FileInputStream fis = new FileInputStream(file);
        ByteArrayOutputStream bos = new ByteArrayOutputStream(1000);
        byte[] b = new byte[1000];
        int n;
        while((n = fis.read(b)) != -1) {
            bos.write(b, 0, n);
        }
        fis.close();
        bos.close();
        byte[] fileBytes = bos.toByteArray();
        
		Base64 base64 = new Base64();
		byte[] decodedBytes = base64.decode(fileBytes);
		
		File outFile = new File("D:/out2.zip");
		outFile.createNewFile();
		OutputStream output = new FileOutputStream(outFile);

		BufferedOutputStream bufferedOutput = new BufferedOutputStream(output);

		bufferedOutput.write(decodedBytes);
		
	}
}

decode
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;

import org.apache.commons.codec.binary.Base64;

public class FileToBase64 {
	
	public static void main(String[] args) throws Exception {
		File file = new File("D:/Bumble.zip");
		FileInputStream fis = new FileInputStream(file);
        ByteArrayOutputStream bos = new ByteArrayOutputStream(1000);
        byte[] b = new byte[1000];
        int n;
        while((n = fis.read(b)) != -1) {
            bos.write(b, 0, n);
        }
        fis.close();
        bos.close();
        byte[] fileBytes = bos.toByteArray();
		
		Base64 base64 = new Base64();
		byte[] base64FileBytes = base64.encode(fileBytes);
		String base64FileBytesStr = new String(base64FileBytes);
		
		File outFile = new File("D:/out.txt");
		outFile.createNewFile();
		FileWriter fileWritter = new FileWriter(outFile, true);
		fileWritter.write(base64FileBytesStr);
		fileWritter.close();
		
	}
}

<dependency>
  <groupId>commons-codec</groupId>
  <artifactId>commons-codec</artifactId>
  <version>1.10</version>
</dependency>
